require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
cds.load <- readOGR("./cb_2015_us_cd114_500k/cb_2015_us_cd114_500k.shp", layer = "cb_2015_us_cd114_500k", GDAL1_integer64_policy = TRUE)
plot(cds.load)
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
cds.load <- readOGR("./cb_2015_us_cd114_500k/cb_2015_us_cd114_500k.shp", layer = "cb_2015_us_cd114_500k", GDAL1_integer64_policy = TRUE)
plot(cds.load)
polls <- readOGR("Allegheny_County_Polling_Place_Locations_November_2016.geojson")
plot(polls)
op_data <- read_excel("Geographies_of_Opportunity_Ranking_Well_Being_by_Congressional_District_(114th_Congress).xlsx") %>%
mutate(Number = str_pad(Number, 4, pad = "0"))
cds <- cds.load[cds.load$GEOID %in% op_data$Number,]
cds@data <- merge(cds@data, op_data, sort = FALSE, by.x = "GEOID", by.y = "Number")
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery)
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery, options = providerTileOptions(noWrap = TRUE))
rivers <- readOGR("./ne_10m_rivers_lake_centerlines")
leaflet(data = rivers) %>%
addProviderTiles("Esri.WorldTerrain", options = providerTileOptions(noWrap = TRUE)) %>%
addPolylines(color = "#63CBD3")
potholes <- read.csv("311_potholes.csv")
# Custom Palette
pal311 <- colorFactor(c("#d73027", "#1a9850"), c("Closed", "Open"))
leaflet() %>%
addProviderTiles("OpenStreetMap.HOT") %>%
addCircleMarkers(data = potholes, lng = ~X, lat = ~Y, radius = 1.5, color = ~pal311(STATUS)) %>%
addLegend(position = "topright" , pal = pal311, values = potholes$STATUS, title = "Status")
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
cds.load <- readOGR("./cb_2015_us_cd114_500k/cb_2015_us_cd114_500k.shp", layer = "cb_2015_us_cd114_500k",
cds.load <- readOGR("./cb_2015_us_cd114_500k/cb_2015_us_cd114_500k.shp", layer = "cb_2015_us_cd114_500k", GDAL1_integer64_policy = TRUE)
plot(cds.load)
cds.load <- readOGR("./cb_2015_us_cd114_500k/cb_2015_us_cd114_500k.shp", layer = "cb_2015_us_cd114_500k", GDAL1_integer64_policy = TRUE)
plot(cds.load)
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
cds.load <- readOGR("./cb_2015_us_cd114_500k/cb_2015_us_cd114_500k.shp", layer = "cb_2015_us_cd114_500k", GDAL1_integer64_policy = TRUE)
polls <- readOGR("Allegheny_County_Polling_Place_Locations_November_2016.geojson")
plot(polls)
op_data <- read_excel("Geographies_of_Opportunity_Ranking_Well_Being_by_Congressional_District_(114th_Congress).xlsx") %>%
mutate(Number = str_pad(Number, 4, pad = "0"))
View(op_data)
cds <- cds.load[cds.load$GEOID %in% op_data$Number,]
cds@data <- merge(cds@data, op_data, sort = FALSE, by.x = "GEOID", by.y = "Number")
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery)
leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery, options = providerTileOptions(noWrap = TRUE))
leaflet(data = cds.load)%>%
addProviderTiles(providers$Esri.WorldImagery)
leaflet(data = cds.load)%>%
addProviderTiles(providers$Esri.WorldImagery)%>%
addPolygons()
rivers <- readOGR("./ne_10m_rivers_lake_centerlines")
View(rivers)
leaflet(data = rivers) %>%
addProviderTiles("Esri.WorldTerrain", options = providerTileOptions(noWrap = TRUE)) %>%
addPolylines(color = "#63CBD3", popup = ~name_en)
setwd("C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/datacleaning")
nybikes <- readOGR("C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/datacleaning/Bicycle Routes")
View(nybikes)
leaflet(data = nybikes) %>%
addProviderTiles("Esri.WorldTerrain")
addPolylines(color = "#63CBD3",popup = ~street)
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
leaflet(data = nybikes) %>%
addProviderTiles("Esri.WorldTerrain")
addPolylines(color = "#63CBD3",popup = ~street)
leaflet(data = nybikes) %>%
addProviderTiles("Esri.WorldTerrain")%>%
addPolylines(color = "#63CBD3",popup = ~street)
pittbikes <- readOGR("pittsburghbikeinfrastructure.geojson")
library(sf)
pittbikes <- read_st("pittsburghbikeinfrastructure.geojson")
pittbikes <- readOGR("pittsburghbikeinfrastructure.geojson")
library(geojsonio)
pittbikes <- geojson_read("https://data.wprdc.org/dataset/407de508-f9dc-4e39-94ed-aeadceddcaea/resource/cf7fc05d-be6f-46ad-82e4-9559fc0a306a/download/pittsburghbikeinfrastructure.geojson",what=sp)
pittbikes <- geojson_read("https://data.wprdc.org/dataset/407de508-f9dc-4e39-94ed-aeadceddcaea/resource/cf7fc05d-be6f-46ad-82e4-9559fc0a306a/download/pittsburghbikeinfrastructure.geojson",what="sp")
library(geojsonio)
pittbikes <- geojson_read("https://data.wprdc.org/dataset/407de508-f9dc-4e39-94ed-aeadceddcaea/resource/cf7fc05d-be6f-46ad-82e4-9559fc0a306a/download/pittsburghbikeinfrastructure.geojson",what="sp")
pittbikes <- st_read("pittsburghbikeinfrastructure.geojson")
View(pittbikes)
leaflet(data = pittbikes) %>%
addProviderTiles("Esri.WorldTerrain")%>%
addPolylines(color = "#63CBD3",popup = ~name)
setwd("C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/datacleaning")
nybikes <- readOGR("C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/datacleaning/Bicycle Routes")
leaflet(data = nybikes) %>%
addProviderTiles("Esri.WorldTerrain")%>%
addPolylines(color = "#63CBD3",popup = ~street)
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
library(sf)
library(geojsonio)
setwd("C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/datacleaning")
nybikes <- readOGR("C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/datacleaning/Bicycle Routes")
leaflet(data = nybikes) %>%
addProviderTiles("Esri.WorldTerrain")%>%
addPolylines(color = "#63CBD3",popup = ~street)
View(nybikes)
nybikes$data
View(nybikes)
nybikes[[data]]
nybikes[data]
nybikes$bikedir
nybikes$boro
nybikes$comments
nybikes$facilitycl
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
library(sf)
library(geojsonio)
setwd("C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/datacleaning")
nybikes <- readOGR("C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/datacleaning/Bicycle Routes")
leaflet(data = nybikes) %>%
addProviderTiles("Esri.WorldTerrain")%>%
addPolylines(color = "#63CBD3",popup = ~street)
View(nybikes)
# Green Infrastructure
library(shiny)
library(shinythemes)
library(leaflet)
library(leaflet.extras)
library(rgdal)
library(shinyjs)
library(rgeos)
greenInf.load <- readOGR("https://data.cityofnewyork.us/api/geospatial/spjh-pz7h?method=export&format=GeoJSON")
boros.load <- readOGR("https://data.cityofnewyork.us/api/geospatial/tqmj-j8zm?method=export&format=GeoJSON")
View(greenInf.load)
View(boros.load)
nybikes <- readOGR("C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/datacleaning/Bicycle Routes")
#Installing required Library's
library(shiny)
library(shinythemes)
library(leaflet)
library(leaflet.extras)
library(rgdal)
library(shinyjs)
library(rgeos)
nybikes <- readOGR("C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/datacleaning/Bicycle Routes")
df <- read.csv("NYCDCP_Manhattan_Bike_Counts_-_On_Street_Weekday.csv")
View(df)
View(df)
df <- read.csv("Bikes_in_Buildings_Requests.csv")
View(df)
library(ggplot2)
df%>%distinct(RequestID)%>%nrow()
library(dplyr)
library(ggplot2)
df%>%distinct(RequestID)%>%nrow()
df%>%group_by(TenantName)%>%nrow()
df%>%group_by(TenantName)%>%summarize(n=n())
df%>%group_by(TenantName)%>%summarize(n=n())%>%arrange(desc(n))
test<- df%>%group_by(TenantName)%>%summarize(n=n())%>%arrange(desc(n))
View(df)
View(test)
test<- df%>%group_by(OwnerName)%>%summarize(n=n())%>%arrange(desc(n))
View(df)
View(test)
test<- df%>%group_by(OwnerName)%>%summarize(n=n())%>%arrange(desc(n))%>%head(10)
View(test)
bikereq<- df%>%group_by(OwnerName)%>%summarize(n=n())%>%arrange(desc(n))%>%head(10)
ggplot(data = bikereq)+geom_bar(aes(x = OwnerName,y=n))
ggplot(data = bikereq)+geom_bar(aes(x = OwnerName,y=n))
ggplot(data = bikereq)+geom_bar(aes(x = OwnerName,y=n),stat = "identity")
ggplot(data = bikereq)+geom_bar(aes(x = OwnerName,y=n),stat = "identity")+coord_flip()
View(bikereq)
View(df)
View(df)
ggplot(data = bikereq)+geom_bar(aes(x = RequestStatus))
ggplot(data = df)+geom_bar(aes(x = RequestStatus))
ggplot(data = df)+geom_bar(aes(x = RequestStatus,fill=RequestStatus))
df <- read.csv("Bikes_in_Buildings_Requests.csv")
shiny::runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
df$NoOfBicycleRequested[1]
df$NoOfBicycleRequested[2]
head(df$NoOfBicycleRequested)
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
View(bikereq)
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
View(df)
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
library(shiny)
library(shinythemes)
library(shinydashboard)
library(leaflet)
library(leaflet.extras)
library(rgdal)
library(shinyjs)
library(rgeos)
library(plotly)
library(DT)
runApp('C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap')
shiny::runApp()
nybikes.load <- readOGR("C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/datacleaning/Bicycle Routes")
bikeracks.load <- readOGR("C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap/cityracks-shp")
type(bikeracks.load)
class(bikeracks.load)
bikereacks.load
bikeracks.load
bikeracks.load$Borough
unique(bikeracks.load$Borough)
View(bikeracks.load)
unique(bikeracks.load$Borough)
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
nybikes.load <- readOGR("C:/Users/lakna/OneDrive/Desktop/R Shiny Operations Mgmt/Final_lgunathi/finalprojectmap/Bicycle Routes")
